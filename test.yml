apiVersion: v1
items:
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    annotations:
      pv.kubernetes.io/bind-completed: "yes"
      pv.kubernetes.io/bound-by-controller: "yes"
    creationTimestamp: null
    name: account-profile-postgre-var-lib-postgresql-data
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
    volumeName: pv100mb00011
  status: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    annotations:
      pv.kubernetes.io/bind-completed: "yes"
      pv.kubernetes.io/bound-by-controller: "yes"
    creationTimestamp: null
    name: var-lib-postgre-data
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 100Mi
    volumeName: pv100mb00017
  status: {}
- apiVersion: v1
  groupNames: null
  kind: RoleBinding
  metadata:
    creationTimestamp: null
    name: admin
  roleRef:
    name: admin
  subjects:
  - kind: User
    name: labbs
  userNames:
  - labbs
- apiVersion: v1
  groupNames: null
  kind: RoleBinding
  metadata:
    creationTimestamp: null
    name: system:deployers
  roleRef:
    name: system:deployer
  subjects:
  - kind: ServiceAccount
    name: deployer
    namespace: bitstock-dev
  userNames:
  - system:serviceaccount:bitstock-dev:deployer
- apiVersion: v1
  groupNames: null
  kind: RoleBinding
  metadata:
    creationTimestamp: null
    name: system:image-builders
  roleRef:
    name: system:image-builder
  subjects:
  - kind: ServiceAccount
    name: builder
    namespace: bitstock-dev
  userNames:
  - system:serviceaccount:bitstock-dev:builder
- apiVersion: v1
  groupNames:
  - system:serviceaccounts:bitstock-dev
  kind: RoleBinding
  metadata:
    creationTimestamp: null
    name: system:image-pullers
  roleRef:
    name: system:image-puller
  subjects:
  - kind: SystemGroup
    name: system:serviceaccounts:bitstock-dev
  userNames: null
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    generation: 1
    labels:
      app: account-adminer
    name: account-adminer
  spec:
    replicas: 1
    selector:
      app: account-adminer
      deploymentconfig: account-adminer
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: account-adminer
          deploymentconfig: account-adminer
      spec:
        containers:
        - image: docker-registry.default.svc:5000/bitstock-staging/account-adminer@sha256:fcf37c917507d69ae67ef240dbc372b1e9d0a3ef7aa4fe726417e1e184784235
          imagePullPolicy: Always
          name: account-adminer
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - account-adminer
        from:
          kind: ImageStreamTag
          name: account-adminer:latest
          namespace: bitstock-staging
      type: ImageChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    generation: 1
    labels:
      app: account-oauthy
    name: account-oauthy
  spec:
    replicas: 1
    selector:
      app: account-oauthy
      deploymentconfig: account-oauthy
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: account-oauthy
          deploymentconfig: account-oauthy
      spec:
        containers:
        - env:
          - name: LDAP_URL
            value: ldap://account-openldap.bitstock-dev.svc:389
          - name: LDAP_BIND_DN
            value: cn=admin,dc=bitstock,dc=com,dc=br
          - name: LDAP_BIND_CREDENTIALS
            value: blitst0c0
          - name: LDAP_SEARCH_BASE
            value: dc=bitstock,dc=com,dc=br
          - name: TOKEN_DEFAULT_EXPIRATION_MINUTES
            value: "1440"
          - name: AUTHORIZATION_SCOPE
            value: basic
          - name: JWT_SECRET
            value: bits123
          - name: NEW_PASSWORD_REGEX
            value: ^^(?=.*\d)(?=.*[a-zA-Z]).{6,30}$$
          image: docker-registry.default.svc:5000/bitstock-staging/account-oauthy@sha256:4f5d6d1ee20497e0a3890d6fde56d329fce3785cd06376d446a99b0cbbc3777d
          imagePullPolicy: Always
          name: account-oauthy
          ports:
          - containerPort: 3000
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - account-oauthy
        from:
          kind: ImageStreamTag
          name: account-oauthy:latest
          namespace: bitstock-staging
      type: ImageChange
    - type: ConfigChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    generation: 1
    labels:
      app: account-openldap
    name: account-openldap
  spec:
    paused: true
    replicas: 1
    selector:
      app: account-openldap
      deploymentconfig: account-openldap
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: account-openldap
          deploymentconfig: account-openldap
      spec:
        containers:
        - env:
          - name: LDAP_ORGANISATION
            value: BITSTOCK
          - name: LDAP_DOMAIN
            value: bitstock.com.br
          - name: LDAP_ADMIN_PASSWORD
            value: blitst0c0
          image: docker-registry.default.svc:5000/bitstock-staging/account-openldap@sha256:0aa4fe1702e9ad018674c65210293dbe52384441ec0de9da3309462fc39f11d5
          imagePullPolicy: Always
          name: account-openldap
          ports:
          - containerPort: 389
            protocol: TCP
          - containerPort: 636
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        containerNames:
        - account-openldap
        from:
          kind: ImageStreamTag
          name: account-openldap:latest
          namespace: bitstock-staging
      type: ImageChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    generation: 1
    labels:
      app: account-profile
    name: account-profile
  spec:
    replicas: 1
    selector:
      app: account-profile
      deploymentconfig: account-profile
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: account-profile
          deploymentconfig: account-profile
      spec:
        containers:
        - env:
          - name: DB_HOST
            value: account-profile-postgre.bitstock-dev.svc
          - name: DB_PORT
            value: "5432"
          - name: DB_USERNAME
            value: bitstock
          - name: DB_PASSWORD
            value: bitstock01
          - name: DB_DATABASE
            value: profile
          - name: MULTICHAIN_HOST
            value: assets-multichain.bitstock-dev.svc
          - name: MULTICHAIN_PASS
            value: 4tAqMLEEFnqkPtndErSqBpgQGKWWwbywckSdukZm3uUk
          - name: TRADER_HOST
            value: http://market-trader.bitstock-dev.svc:3030
          - name: OAUTHY_HOST
            value: http://account-oauthy.bitstock-dev.svc:3000
          image: docker-registry.default.svc:5000/bitstock-staging/account-profile@sha256:b29225204d5eb705c7eb2d75c06ac9fd88709bb1fc37681186d0d79daa7a55b9
          imagePullPolicy: Always
          name: account-profile
          ports:
          - containerPort: 8000
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - account-profile
        from:
          kind: ImageStreamTag
          name: account-profile:latest
          namespace: bitstock-staging
      type: ImageChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    generation: 1
    labels:
      app: account-profile-postgre
    name: account-profile-postgre
  spec:
    replicas: 1
    selector:
      app: account-profile-postgre
      deploymentconfig: account-profile-postgre
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: account-profile-postgre
          deploymentconfig: account-profile-postgre
      spec:
        containers:
        - env:
          - name: POSTGRES_USER
            value: bitstock
          - name: POSTGRES_PASSWORD
            value: bitstock01
          - name: POSTGRES_DB
            value: profile
          image: docker-registry.default.svc:5000/bitstock-staging/account-profile-postgre@sha256:624a8cf3a458ab37b6c14fa51b9762b3c68f6bd68d8a72d3c7340a83edc07474
          imagePullPolicy: Always
          name: account-profile-postgre
          ports:
          - containerPort: 5432
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/postgresql/data
            name: volume-y8g1c
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: volume-y8g1c
          persistentVolumeClaim:
            claimName: account-profile-postgre-var-lib-postgresql-data
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - account-profile-postgre
        from:
          kind: ImageStreamTag
          name: account-profile-postgre:latest
          namespace: bitstock-staging
      type: ImageChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    generation: 1
    labels:
      app: api-generic-api
    name: api-generic-api
  spec:
    replicas: 1
    selector:
      app: api-generic-api
      deploymentconfig: api-generic-api
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: api-generic-api
          deploymentconfig: api-generic-api
      spec:
        containers:
        - env:
          - name: ACCOUNT_OAUTHY_HOST
            value: http://account-oauthy.bitstock-dev.svc:3000
          - name: ACCOUNT_PROFILE_HOST
            value: http://account-profile.bitstock-dev.svc:8000
          - name: MARKET_TRADER_HOST
            value: http://market-trader.bitstock-dev.svc:3030
          - name: JWT_SECRET
            value: bits123
          - name: BTCSERVICES_BTCCASHINCASHOUT_HOST
            value: http://btccashincashout.bitstock-dev.svc:9000
          image: docker-registry.default.svc:5000/bitstock-staging/api-generic-api@sha256:3b20d1319476d147626ff98d59c3732755bfb46bc215e19dd974e0c0d5fb9a4b
          imagePullPolicy: Always
          name: api-generic-api
          ports:
          - containerPort: 7070
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - api-generic-api
        from:
          kind: ImageStreamTag
          name: api-generic-api:latest
          namespace: bitstock-staging
      type: ImageChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    generation: 1
    labels:
      app: assets-multichain
    name: assets-multichain
  spec:
    paused: true
    replicas: 1
    selector:
      app: assets-multichain
      deploymentconfig: assets-multichain
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: assets-multichain
          deploymentconfig: assets-multichain
      spec:
        containers:
        - image: docker-registry.default.svc:5000/bitstock-staging/account-assets-multichain@sha256:02dff7eb6382278b58dc806226b429451ee235dec562902dedd3634c0c05c4dc
          imagePullPolicy: Always
          name: assets-multichain
          ports:
          - containerPort: 9262
            protocol: TCP
          - containerPort: 9263
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - assets-multichain
        from:
          kind: ImageStreamTag
          name: account-assets-multichain:latest
          namespace: bitstock-staging
      type: ImageChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    generation: 1
    labels:
      app: btccashincashout
    name: btccashincashout
  spec:
    replicas: 1
    selector:
      app: btccashincashout
      deploymentconfig: btccashincashout
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: btccashincashout
          deploymentconfig: btccashincashout
      spec:
        containers:
        - env:
          - name: DB_HOST
            value: btccashincashout-postgre.bitstock-dev.svc
          - name: DB_PASSWORD
            value: bitstock01
          - name: PROFILE_HOST
            value: http://account-profile.bitstock-dev.svc:8000
          - name: DB_PORT
            value: "5432"
          image: docker-registry.default.svc:5000/bitstock-staging/btcservices-btccashincashout@sha256:ff972e064c638e0099643f2551bbc1aeb95681db693b53713767244f4d26691e
          imagePullPolicy: Always
          name: btccashincashout
          ports:
          - containerPort: 9000
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - btccashincashout
        from:
          kind: ImageStreamTag
          name: btcservices-btccashincashout:latest
          namespace: bitstock-staging
      type: ImageChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    generation: 1
    labels:
      app: btccashincashout-postgre
    name: btccashincashout-postgre
  spec:
    replicas: 1
    selector:
      app: btccashincashout-postgre
      deploymentconfig: btccashincashout-postgre
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: btccashincashout-postgre
          deploymentconfig: btccashincashout-postgre
      spec:
        containers:
        - env:
          - name: POSTGRES_PASSWORD
            value: bitstock01
          image: docker-registry.default.svc:5000/bitstock-staging/btcservices-btccashincashout-postgre@sha256:38e681c58422db3db5deabd4ad43296711724543986eb51bc980d912252ac156
          imagePullPolicy: Always
          name: btccashincashout-postgre
          ports:
          - containerPort: 5432
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/postgresql/data
            name: volume-0en0e
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: volume-0en0e
          persistentVolumeClaim:
            claimName: var-lib-postgre-data
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - btccashincashout-postgre
        from:
          kind: ImageStreamTag
          name: btcservices-btccashincashout-postgre:latest
          namespace: bitstock-staging
      type: ImageChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    generation: 1
    labels:
      app: market-market-maker
    name: market-market-maker
  spec:
    replicas: 1
    selector:
      app: market-market-maker
      deploymentconfig: market-market-maker
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: market-market-maker
          deploymentconfig: market-market-maker
      spec:
        containers:
        - env:
          - name: API_HOST
            value: http://api-generic-api.bitstock-dev.svc:7070
          - name: API_TOKEN
            value: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1NDQ1NjE1NjAsInVzZXJuYW1lIjoidGVzdDAwQHRlc3QuY29tIiwiZGlzcGxheU5hbWUiOiJ0ZXN0MDBAdGVzdC5jb20iLCJtYWlsIjoidGVzdDAwQHRlc3QuY29tIiwianRpIjoiNWE4YjQzNTQtODk3My00YTY2LTlmNDktZjA4NjI3ODQzODFkIiwic2NvcGVzIjpbImJhc2ljIl19.A7jGiSQHx8OmptqLJmIRU2By7xdRAhPFYiJezcZZ4-s
          - name: OFFERS_QTTY
            value: "4"
          - name: OFFERS_EXPIRATION_SECONDS
            value: "420"
          - name: OFFERS_BRL_VALUES
            value: 50,100,150,200
          - name: RUN_EACH_MINUTES
            value: "5"
          image: docker-registry.default.svc:5000/bitstock-staging/market-market-maker@sha256:bcc68d58770211c54fc1a8d676ffa6e0c889e1cd0f70828fc246e067af6a4c1c
          imagePullPolicy: Always
          name: market-market-maker
          ports:
          - containerPort: 4040
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - market-market-maker
        from:
          kind: ImageStreamTag
          name: market-market-maker:latest
          namespace: bitstock-staging
      type: ImageChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    generation: 1
    labels:
      app: market-trader
    name: market-trader
  spec:
    replicas: 1
    selector:
      app: market-trader
      deploymentconfig: market-trader
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: market-trader
          deploymentconfig: market-trader
      spec:
        containers:
        - env:
          - name: DB_HOST
            value: market-trader-postgre.bitstock-dev.svc
          - name: DB_PORT
            value: "5432"
          - name: DB_USERNAME
            value: bitstock
          - name: DB_PASSWORD
            value: bitstock01
          - name: DB_DATABASE
            value: market
          - name: ACCOUNT_PROFILE_HOST
            value: http://account-profile.bitstock-dev.svc:8000
          image: docker-registry.default.svc:5000/bitstock-staging/market-trader@sha256:1ce02ef10ea46467e78eac17cc22391ef81ecf834efd46cfe61d8593ebf27424
          imagePullPolicy: Always
          name: market-trader
          ports:
          - containerPort: 3030
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - market-trader
        from:
          kind: ImageStreamTag
          name: market-trader:latest
          namespace: bitstock-staging
      type: ImageChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    generation: 1
    labels:
      app: market-trader-postgre
    name: market-trader-postgre
  spec:
    paused: true
    replicas: 1
    selector:
      app: market-trader-postgre
      deploymentconfig: market-trader-postgre
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: market-trader-postgre
          deploymentconfig: market-trader-postgre
      spec:
        containers:
        - env:
          - name: POSTGRES_PASSWORD
            value: bitstock01
          image: docker-registry.default.svc:5000/bitstock-staging/market-trader-postgre@sha256:0d0e08aac5aae258f848a8f42850cbe24355c3bf08ac57c06754869bf411578c
          imagePullPolicy: Always
          name: market-trader-postgre
          ports:
          - containerPort: 5432
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - market-trader-postgre
        from:
          kind: ImageStreamTag
          name: market-trader-postgre:latest
          namespace: bitstock-staging
      type: ImageChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    labels:
      app: account-adminer
    name: account-adminer
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      deploymentconfig: account-adminer
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    labels:
      app: account-oauthy
    name: account-oauthy
  spec:
    ports:
    - name: 3000-tcp
      port: 3000
      protocol: TCP
      targetPort: 3000
    selector:
      deploymentconfig: account-oauthy
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    labels:
      app: account-openldap
    name: account-openldap
  spec:
    ports:
    - name: 389-tcp
      port: 389
      protocol: TCP
      targetPort: 389
    - name: 636-tcp
      port: 636
      protocol: TCP
      targetPort: 636
    selector:
      deploymentconfig: account-openldap
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    labels:
      app: account-profile
    name: account-profile
  spec:
    ports:
    - name: 8000-tcp
      port: 8000
      protocol: TCP
      targetPort: 8000
    selector:
      deploymentconfig: account-profile
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    labels:
      app: account-profile-postgre
    name: account-profile-postgre
  spec:
    ports:
    - name: 5432-tcp
      port: 5432
      protocol: TCP
      targetPort: 5432
    selector:
      deploymentconfig: account-profile-postgre
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    labels:
      app: api-generic-api
    name: api-generic-api
  spec:
    ports:
    - name: 7070-tcp
      port: 7070
      protocol: TCP
      targetPort: 7070
    selector:
      deploymentconfig: api-generic-api
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    labels:
      app: assets-multichain
    name: assets-multichain
  spec:
    ports:
    - name: 9262-tcp
      port: 9262
      protocol: TCP
      targetPort: 9262
    - name: 9263-tcp
      port: 9263
      protocol: TCP
      targetPort: 9263
    - name: 2750-tcp
      port: 2750
      protocol: TCP
      targetPort: 2750
    selector:
      deploymentconfig: assets-multichain
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    labels:
      app: btccashincashout
    name: btccashincashout
  spec:
    ports:
    - name: 9000-tcp
      port: 9000
      protocol: TCP
      targetPort: 9000
    selector:
      deploymentconfig: btccashincashout
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    labels:
      app: btccashincashout-postgre
    name: btccashincashout-postgre
  spec:
    ports:
    - name: 5432-tcp
      port: 5432
      protocol: TCP
      targetPort: 5432
    selector:
      deploymentconfig: btccashincashout-postgre
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    labels:
      app: market-market-maker
    name: market-market-maker
  spec:
    ports:
    - name: 4040-tcp
      port: 4040
      protocol: TCP
      targetPort: 4040
    selector:
      deploymentconfig: market-market-maker
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    labels:
      app: market-trader
    name: market-trader
  spec:
    ports:
    - name: 3030-tcp
      port: 3030
      protocol: TCP
      targetPort: 3030
    selector:
      deploymentconfig: market-trader
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    labels:
      app: market-trader-postgre
    name: market-trader-postgre
  spec:
    ports:
    - name: 5432-tcp
      port: 5432
      protocol: TCP
      targetPort: 5432
    selector:
      deploymentconfig: market-trader-postgre
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    labels:
      app: whoami
    name: whoami
  spec:
    ports:
    - name: 8000-tcp
      port: 8000
      protocol: TCP
      targetPort: 8000
    selector:
      deploymentconfig: whoami
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
kind: List
metadata: {}
